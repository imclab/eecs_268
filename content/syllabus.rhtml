---
title: Syllabus
extension: html
filter:
  - erb
---

<h3 align=center style='text-align:center'>Instructor</h3>

<div align=center>

<table class=MsoNormalTable border=1 cellpadding=0 style='mso-cellspacing:1.5pt;
 mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal align=center style='text-align:center'>Man Kong: 2038
  Eaton<br>
  <b style='mso-bidi-font-weight:normal'>Lecture:</b> </p>
  <p class=MsoNormal align=center style='text-align:center'>TR 9:30am-10:45am,
  1136 Learned<br>
  <b style='mso-bidi-font-weight:normal'>Office Hours:</b> </p>
  <p class=MsoNormal align=center style='text-align:center'>TR 11:00am-12:30pm<br>
  Office Phone: 864-7389<br>
  Email: <a href="mailto:kong@eecs.ku.edu">kong@eecs.ku.edu</a> </p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<h3 align=center style='text-align:center'>Laboratory TA</h3>

<div align=center>

<table class=MsoNormalTable border=1 cellpadding=0 style='mso-cellspacing:1.5pt;
 mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;height:75.9pt'>
  <td style='padding:.75pt .75pt .75pt .75pt;height:75.9pt'>
  <p class=MsoNormal align=center style='text-align:center'><i><span lang=DE
  style='mso-ansi-language:DE'>Mark Calnon: 2043 Eaton</span></i><span lang=DE
  style='mso-ansi-language:DE'><br>
  <b style='mso-bidi-font-weight:normal'>Labs:</b> <br>
  W 10:00am-11:50am, 1005D Eaton<o:p></o:p></span></p>
  <p class=MsoNormal align=center style='text-align:center'>W 2:00pm-3:50pm,
  1005D Eaton <br>
  <b style='mso-bidi-font-weight:normal'>Office Hours:</b> </p>
  <p class=MsoNormal align=center style='text-align:center'>TR 11:00pm-12:30pm<br>
  W 12:00pm-2:00pm<br>
  Office Phone: 864-7337<br>
  electronic mail: <a href="mailto:mcalnon@ku.edu">mcalnon@ku.edu</a> </p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes;height:75.9pt'>
  <td style='padding:.75pt .75pt .75pt .75pt;height:75.9pt'>
  <p class=MsoNormal align=center style='text-align:center'><i>Jim
  Vallandingham: 2043 Eaton</i><br>
  <b style='mso-bidi-font-weight:normal'>Labs:</b> </p>
  <p class=MsoNormal align=center style='text-align:center'>M 9:30am-11:20am,
  1005D Eaton</p>
  <p class=MsoNormal align=center style='text-align:center'>M 1:00pm-2:50pm,
  1005D Eaton<br>
  <b style='mso-bidi-font-weight:normal'>Office Hours:</b> </p>
  <p class=MsoNormal align=center style='text-align:center'>M 11:30am-2:00pm</p>
  <p class=MsoNormal align=center style='text-align:center'>T 2:15pm-4:00pm<br>
  Office Phone: 864-7337<br>
  electronic mail: <a href="mailto:vlandham@ku.edu">vlandham@ku.edu</a> </p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<h3><o:p>&nbsp;</o:p></h3>

<h3>Text</h3>

<p><i>Data Abstraction and Problem Solving with C++: Walls and Mirrors,</i>
Frank M. <span class=SpellE>Carrano</span>, Fifth edition, Addison Wesley,
2007.</p>

<p><o:p>&nbsp;</o:p></p>

<h3>Catalog Listing:</h3>

<p><span class=GramE>EECS 268 - Programming II (4).</span> This course
continues developing problem solving techniques by focusing on the imperative
and object-oriented styles using Abstract Data Types. Basic data structures
such as queues, stacks, trees, and graphs will be covered. <span class=GramE>Recursion.</span>
<span class=GramE>Basic notions of algorithmic efficiency and performance
analysis in the context of sorting algorithms.</span> <span class=GramE>Basic
Object-Oriented techniques.</span> An associated laboratory will develop
projects reinforcing the lecture material. <span class=GramE>Three class
periods and one laboratory period per week.</span> Prerequisite: EECS 168 </p>

<p><o:p>&nbsp;</o:p></p>

<h3>Class Objectives:</h3>

<p>The goal of this class is to continue the development of fundamental
computer-based problem solving skills in the following three areas: </p>

<ol start=1 type=1>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'>Software Development - The
     specification, design, implementation, testing, and documentation of
     software to solve specific problems. We will see that these personal
     &quot;software engineering&quot; skills become more important as programs
     become larger and multiple programmers are involved. </li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><span class=GramE>Object</span>
     Oriented Programming - The syntax, semantics, and use of the basic
     features of a typical object oriented programming language (e.g. C++).
     Particular emphasis will be on using and extending existing objects. </li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'>Algorithms and Data
     Structures - Advanced methods for storing and manipulating data to
     effectively solve complex problems (e.g. linked lists, stacks, queues,
     trees, <span class=GramE>graphs</span>, hash tables, searching, and
     sorting). </li>
</ol>

<p>The pedagogical approach will be focused on solving problems using existing
software modules (e.g. class libraries) and new modules when necessary. The
syntax and semantics of programming language constructs will be introduced as
needed in this context. Experimental comparison of different algorithms will be
used to introduce the importance of complexity analysis. Programming
assignments and their associated reports will be evaluated based on
correctness, software design, programming style, testing, and documentation. </p>

<p><o:p>&nbsp;</o:p></p>

<h3>Development Environment</h3>

<p>All programs will be developed in C++ on the departmental <span
class=SpellE>linux</span> systems. If you use another C++ development
environment at home or elsewhere, it is your responsibility to make sure the
code you submit compiles and runs correctly in the <span class=SpellE>linux</span>
environment used in the lab. If it does not, your project will not be
considered submitted and you will be given <i>no extra time</i> to make
corrections. </p>

<h3><o:p>&nbsp;</o:p></h3>

<h3>Grading</h3>

<table class=MsoNormalTable border=1 cellpadding=0 style='mso-cellspacing:1.5pt;
 mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width=130 style='width:97.5pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Exam 1: 20%</p>
  </td>
  <td width=130 style='width:97.5pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Exam <st1:time Minute="20" Hour="14" w:st="on">2: 20</st1:time>%</p>
  </td>
  <td width=170 style='width:127.5pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Final Exam: 30%</p>
  </td>
  <td width=207 style='width:155.6pt;padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Programming Assignment: 30%</p>
  </td>
 </tr>
</table>

<h3><o:p>&nbsp;</o:p></h3>

<h3>General Course Information</h3>

<p>You must come to laboratories properly prepared. This includes reading the programming/laboratory
assignment before coming to the lab and making sure that you have satisfied any
prerequisites stated in the assignment.</p>

<p>Course-related questions dealing with projects and laboratory assignments <i>must</i>
be directed first to your <span class=GramE>TAs.</span> If you are still having
difficulty after that, see the instructor for help. Your TAs will help you with
any questions, whether it is about the lectures or laboratory assignments.</p>

<h3><o:p>&nbsp;</o:p></h3>

<h3>Policies</h3>

<p>Unless otherwise stated, all material from (a) the assigned readings, (b)
lectures, (c) handouts, and (d) information posted on the class web site are
fair <st1:PersonName w:st="on">game</st1:PersonName> for exams. Note in
particular that you are responsible for all material in assigned readings from
the text, regardless of whether the material was explicitly covered in class.
Any unauthorized absence from <span class=GramE>a</span> exam will result in a
zero for that exam.</p>

<p>Both the lab and lecture sessions are important and integral parts of this
course. You are strongly encouraged to attend all lectures and labs. Attendance
may be taken during lectures <i>and</i> labs. If you know <i>in advance</i>
that you must miss a lab for some valid reason, make arrangements <i>beforehand</i>
with the TA to make up the lab, perhaps by attending one of the other sessions
in the same week. If you miss a lecture <i>or</i> lab due to illness, bring a
doctor's note to us and we will record the absence as excused. </p>

<p>Course-related questions dealing with project and laboratory assignments
must be directed first to your <span class=GramE>TAs.</span> If you are still
having difficulty after that, see the instructor for help. Your TAs will help
you with any questions, whether it is about the lectures or laboratory
assignments. </p>

<p>Indicated on each programming assignment page is its due date. Programming
assignments must be turned in by this due date in order to be eligible for full
credit. Programming assignments may be turned in up to one week later with a
30% penalty. That is, the programming assignment will first be graded as if it
were turned in on time. Then 30% of the points you would have earned will be
deducted. <span style='mso-bidi-font-weight:bold'>No </span>programming
assignment<span style='mso-bidi-font-weight:bold'> will be accepted which is <i>either</i>
(<span class=SpellE>i</span>) more than one week late, <i>or</i> (ii) not
submitted by 11:59 p.m. May 7, which is the day before Stop Day. <o:p></o:p></span></p>

<p><i>Each </i><i style='mso-bidi-font-style:normal'>programming assignment<span
style='mso-bidi-font-style:italic'> that you do not turn in will lower your
final grade by one-half letter.</span></i> <b><i>To be considered &quot;turned
in&quot;<span class=GramE>,</span> you must earn at least 50% of the points on
a </i></b><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>programming<span style='mso-bidi-font-weight:bold;mso-bidi-font-style:
italic'> assignment.</span></i></b> <u>Note that this means if you turn a
project in late, you must earn at least 71% of the points since 30% will be
deducted!</u><span style='mso-spacerun:yes'>  </span></p>

<p>A program that will not compile will earn you at most 30% of the points and,
a program that compiles but will not execute correctly according to our sample
input data will earn you at most 50% of the points.</p>

<p>All work (projects, homework, and exams) <i>must</i> be strictly your own.
Sharing your work or copying is cheating, and submitting a work that is not all
yours is also considered cheating. Any cheating will result in <u>an F for the
course</u> for <i>all</i> parties involved. Reports of <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>academic misconduct</i></b> will
also be made to your major department, school/college, and university, which
will result in more serious sanctions.</p>

<h3><o:p>&nbsp;</o:p></h3>

<h3>Notes on Grades and Grading</h3>

<p>The purpose of the lab/programming assignments is to give you an opportunity
to implement various concepts covered in class, thereby learning them more
deeply than is possible simply by reading the book and attending lectures. The
laboratory setting allows you to ask questions of the TAs and your fellow
students, and pretty much work until the exercises are complete. But completing
the labs - just like reading the book and attending lectures - is no guarantee
that you have mastered the material. <i>It is your responsibility to ensure
that you have fully understood the lab material as well as the course material
on which the lab is based.</i> Do not fall into the trap of leaning too heavily
on help from your classmates. Experience has shown that, while lab grades often
average as high as 80-90%, exam grades typically are much lower. Exam averages
are typically in the mid 70s, and scores much lower are not uncommon. The point
is that you need to realize that completing labs with high grades is not in
itself an indication that you have mastered the material.</p>

<p>Individual homework and project may not be weighted equally. Generally
speaking, individual assignments will be weighted according to their difficulty
and/or amount of effort required to complete them.</p>

<p>Should you wish to appeal a grade that you have received on a
lab/programming assignment, exam, or anything else, you must do so within five
days after the graded item is returned, regardless of whether you were in class
that day or not.</p>

<p>A final grade for the course will be computed by using the weights indicated
above and a 90-80-70-60 grade scale.</p>

<h3><o:p>&nbsp;</o:p></h3>

<h3>Withdrawal</h3>

<p>As stated in the Undergraduate Catalog, procedures for withdrawing from a
course are governed by the academic unit offering the course, not the academic
unit to which a student belongs. If you choose to withdraw from this course,
you should refer to the regulations outlined in the Catalog and the Timetable. </p>

<p class=MsoNormal style='tab-stops:.5in 63.0pt 1.0in 1.5in'><b
style='mso-bidi-font-weight:normal'><i><o:p>&nbsp;</o:p></i></b></p>

<h3>Class Website</h3>

<p class=MsoNormal style='tab-stops:.5in 63.0pt 1.0in 1.5in'>You re responsible
to any course/lab/assignment related information that we pose on our website at
<span style='mso-bidi-font-style:italic'><a
href="http://people.eecs.ku.edu/~jvalland/">http://people.eecs.ku.edu/~jvalland/</a>.<span
style='mso-spacerun:yes'>  </span></span>Please check it everyday and check it
frequently. <span style='mso-bidi-font-style:italic'><o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:.5in 63.0pt 1.0in 1.5in'><span
style='mso-bidi-font-style:italic'><span style='mso-tab-count:1'>            </span><o:p></o:p></span></p>

<p><o:p>&nbsp;</o:p></p>

<p><o:p>&nbsp;</o:p></p>
